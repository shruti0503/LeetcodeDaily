class SmallestInfiniteSet {
public:
int curr;
set<int>s; //set initalised by empty 
    SmallestInfiniteSet() {
        curr=1; //curr initlaised by 1
        
    }
    
    int popSmallest() {
        //if set is not empty ; it has a back element that was
        //added again after getting popped out onc because of curr
        if(s.size()){
            int ans=*s.begin();
            s.erase(ans);
            return ans;
        }
        else{
            curr++;
            return curr-1;
        }
        
    }
    
    void addBack(int num) {
        //only adding back num to a set , when num<curr 
        //this means that num was popped out earlier now added back again
        if(curr>num) s.insert(num);
        
    }
};

/**
 * Your SmallestInfiniteSet object will be instantiated and called as such:
 * SmallestInfiniteSet* obj = new SmallestInfiniteSet();
 * int param_1 = obj->popSmallest();
 * obj->addBack(num);
 */
